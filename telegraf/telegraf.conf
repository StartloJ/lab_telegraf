# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared plugins.

# Even if a plugin has no configuration, it must be declared in here
# to be active. Declaring a plugin means just specifying the name
# as a section with no variables. To deactivate a plugin, comment
# out the name and any variables.

# Use 'telegraf -config telegraf.toml -test' to see what metrics a config
# file would generate.

# One rule that plugins conform to is wherever a connection string
# can be passed, the values '' and 'localhost' are treated specially.
# They indicate to the plugin to use their own builtin configuration to
# connect to the local system.

# NOTE: The configuration has a few required parameters. They are marked
# with 'required'. Be sure to edit those to make this configuration work.

# Tags can also be specified via a normal map, but only one form at a time:
[tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at
  ## most metric_batch_size metrics.
  metric_batch_size = 1000
  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = "/var/log/telegraf/telegraf_agent.log"

  # Override default hostname, if empty use os.Hostname()
  hostname = ""

  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[outputs]
[[outputs.influxdb]]
## Level 1 K/V ##
    username = "telegraf"
    insecure_skip_verify = false
    retention_policy = "autogen"
    urls = [ "http://10.88.89.10:8086" ]
    database = "telegraf"
    write_consistency = "any"
    precision = "s"
    user_agent = "telegraf"
    timeout = "5s"
    password = "password"
## END ##
## Level 2 K/V ##
## END ##

[[outputs.influxdb]]
## Level 1 K/V ##
    username = "telegraf"
    insecure_skip_verify = false
    retention_policy = "autogen"
    urls = [ "http://54.251.144.71:8086" ]
    database = "telegraf"
    write_consistency = "any"
    precision = "s"
    user_agent = "telegraf"
    timeout = "5s"
    password = "password"
##

###############################################################################
#                                  PLUGINS                                    #
###############################################################################

[[inputs.processes]]
[[inputs.mem]]
[[inputs.system]]
[[inputs.disk]]
[[inputs.diskio]]
[[inputs.net]]
[[inputs.cpu]]
    fielddrop = [ "time_*" ]
    totalcpu = true
    percpu = true

###############################################################################
#                              service PLUGINS                                #
###############################################################################
